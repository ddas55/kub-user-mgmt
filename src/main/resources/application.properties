spring.application.name=user-mgmt
#### Application data ####
myapp.msg=Msg From Inside JAR application.properties
server.servlet.context-path=/ctxuser
server.port=8080


##Distributed Tracing
## zipking pod should be running in k8s cluster. 
## kub-brandsService-source service can directly call to zipkin-collector service.
## because both are running inside k8s cluster
## Keep the spring.zipkin.service.name same as spring.application.name for easy tracking
spring.zipkin.service.name=user-mgmt
spring.zipkin.enabled=true
#For Local Testing in eclipse , docker run -d -p 9411:9411 openzipkin/zipkin
#spring.zipkin.base-url=http://localhost:9411
#For zipkin running inside k8s pod , zipkin service name should be zipkin
#Inject the spring.zipkin.base-url=http://zipkin:9411 in bootstrap.properties confimap
spring.zipkin.base-url=http://zipkin:9411



#Authenticatr Token-Keycloak
keycloak.realm                      	= vehrealm
keycloak.auth-server-url            	= http://192.168.64.4:31516/auth
#Client name
keycloak.resource                   	= client-brands-source
keycloak.ssl-required               	= external
keycloak.credentials.secret         	= 6311dbaf-6fd3-4f55-91de-9ce8c469b985
keycloak.use-resource-role-mappings 	= true
keycloak.bearer-only                	= true
myapp.keycloak.token-endpoint 			= http://192.168.64.4:31516/auth/realms/vehrealm/protocol/openid-connect/token
#admin
myapp.keycloak.admin-userid 			= admin
myapp.keycloak.admin-password 			= admin
myapp.keycloak.admin-token-endpoint 	= http://192.168.64.4:31516/auth/realms/master/protocol/openid-connect/token

myapp.keycloak.logout-user-session 		= http://192.168.64.4:31516/auth/realms/master/sessions/
myapp.keycloak.logout-user-all-session 	= http://192.168.64.4:31516/auth/admin/realms/vehrealm/users/<userid>/logout



